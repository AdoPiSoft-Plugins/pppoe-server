var{bills_manager}=require("plugin-core"),Bill=require("../bill.js");const promiseSeries=require("promise.series"),clients=require("../clients.js"),INTERVAL=18e6,INITIAL_TIMEOUT=2e4;exports.init=async()=>{setTimeout(async()=>{await exports.tick()},INITIAL_TIMEOUT),setInterval(async()=>{await exports.tick()},INTERVAL)},exports.tick=async()=>{let list=(await clients.listAll()).filter(l=>l.auto_bill);await promiseSeries(list.map(client=>async()=>{await exports.generateBill(client)}))},exports.generateBill=async client=>{try{var today=new Date,due_date=new Date(client.expiration_date),billing_date=new Date(due_date.getTime());billing_date.setDate(client.billing_date);var ref_number=[client.id,due_date.getTime()].join("");if(billing_date<=today){if(await bills_manager.isPaid(ref_number))return;var bill=await bills_manager.find(ref_number);bill||(bill=new Bill(ref_number,{account:client,due_date:due_date}),await bills_manager.add(bill),bill.on("paid",bill=>{})),await bills_manager.updateBill(ref_number)}}catch(e){}};