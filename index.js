"use strict";var fs=require("fs-extra"),promiseSeries=require("promise.series"),{app}=require("plugin-core"),router=require("./router"),clients=require("./clients"),models=require("./models"),path=require("path"),config=require("./config"),clients_manager=require("./services/clients-manager.js"),subscriptions=require("./services/subscriptions.js"),cmd=require("./lib/cmd.js"),config_ini_path="/etc/ppp/pppoe-config.ini";module.exports={async init(id){await models.init(),await clients_manager.init(),await subscriptions.init(),app.use(router),setTimeout(async()=>{await config.startServer()},18e4);var script_files=await fs.readdir(path.join(__dirname,"scripts"));await Promise.all(script_files.map(async script_path=>{script_path=path.join(__dirname,"scripts",script_path);await cmd(`/bin/chmod a+x ${script_path}`)}))},async install(){try{await cmd(`/bin/chmod a+x ${path.join(__dirname,"scripts/install.sh")}`).catch(console.log),await cmd(path.join(__dirname,"scripts/install.sh")).catch(console.log)}catch(e){}},async uninstall(){try{await cmd(path.join(__dirname,"scripts/uninstall.sh"))}catch(e){}},async backup(backup_dir,plugin_name){try{await fs.promises.mkdir(path.join(backup_dir,"plugins",plugin_name),{recursive:!0}).catch(console.error);var config_dest_ini=path.join(backup_dir,"plugins",plugin_name,"pppoe-config.ini");await fs.pathExists(config_ini_path)&&await fs.copy(config_ini_path,config_dest_ini);var clients_dest_json=path.join(backup_dir,"plugins",plugin_name,"pppoe-clients.json"),list=await clients.listAll();list.length&&await fs.promises.writeFile(clients_dest_json,JSON.stringify(list))}catch(e){}},async restore(extract_dir,plugin_name){try{var backup_clients,backup_clients_json_path=path.join(extract_dir,"plugins",plugin_name,"pppoe-clients.json");await fs.pathExists(backup_clients_json_path)&&(backup_clients=JSON.parse(await fs.promises.readFile(backup_clients_json_path,"utf8")),await promiseSeries(backup_clients.map(c=>async()=>{try{await clients.createClient(c)}catch(e){}})));var backup_config_ini_path=path.join(extract_dir,"plugins",plugin_name,"pppoe-config.ini");await fs.pathExists(backup_config_ini_path)&&await fs.copy(backup_config_ini_path,config_ini_path)}catch(e){}}};